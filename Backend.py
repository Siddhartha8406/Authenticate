import datetime
from unittest import result
#TestDB
#TRUNCATE

'''
 ('Rashmi', 'moti', 'AIKnqsA')
 ('Sid', 'fit', 'nSJZTTN')'''

import mysql.connector
import random
import string

db=mysql.connector.connect(
    host = 'localhost',
    user = 'root',
    passwd = 'root',
    database = 'TestDB'
)

myCursor = db.cursor()

#myCursor.execute("CREATE TABLE Vault(userName varchar(50) NOT NULL, pass varchar(50)NOT NULL, recoveryKey varchar(50))")

'''
 Take arguments for 'userName', 'pass' then adds it to Table
 Recovery key is generated by Random module
'''
def Add(uname, password):
    key = ''
    if Check(uname):
        print('The value is already there')
    else:
        for x in range(7):
            key += random.choice(string.ascii_letters)
        myCursor.execute(f"INSERT INTO Vault(userName, pass, recoveryKey) VALUES('{uname}','{password}','{key}')")
        db.commit()

'''
 1. In check(), the defalut value is False i.e. it is considered by default that 
   there is no similar username
 2. First cursor selects the row with given value as username
 3. Then a for loop is run to go through value; if a value is found the if function 
   then changes the value of 'value' to True.
 4. At last the value of 'value' is returned
 5.If name is there then True is returned and vice-versa
'''
def Check(uname):
    myCursor.execute(f"SELECT * FROM VAULT WHERE userName = '{uname}'")
    value = False
    for i in myCursor:
        if i != '':
            value = True
            break
    return value

def GetPass(uid):
    try:
        myCursor.execute(f"SELECT pass FROM Vault WHERE userName='{uid}'")
        return myCursor.fetchone()[0]
    except:
        print('error')

def Authenticate(uname, password):
    value = False
    if Check(uname):
        pword = GetPass(uname)
        if password == pword:
            value = True
    return value

def PassChange(npass, key):
    myCursor.execute(f"UPDATE Vault SET pass='{npass}' WHERE recoveryKey='{key}'")

def RecoveryCheck(uname, key):
    result = False
    if Check(uname):
        myCursor.execute(f"SELECT recoveryKey FROM Vault where userName='{uname}'")
        if myCursor.fetchone()[0] == key:
            result = True
        return result

'''if __name__ == '__main__':
    myCursor.execute("SELECT * FROM Vault")
    for i in myCursor:
        print(i)'''

